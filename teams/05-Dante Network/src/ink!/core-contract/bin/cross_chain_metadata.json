{
  "source": {
    "hash": "0xd08a701a810969c09055420d104c7fd2f340217ecd2071b6f3a14bcb74d4fd7a",
    "language": "ink! 3.2.0",
    "compiler": "rustc 1.62.0-nightly"
  },
  "contract": {
    "name": "cross_chain",
    "version": "0.1.0",
    "authors": [
      "[your_name] <[your_email]>"
    ]
  },
  "V3": {
    "spec": {
      "constructors": [
        {
          "args": [
            {
              "label": "chain_name",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 3
              }
            }
          ],
          "docs": [
            "Constructor that initializes `chain_name`."
          ],
          "label": "new",
          "payable": false,
          "selector": "0x9bae9d5e"
        }
      ],
      "docs": [],
      "events": [],
      "messages": [
        {
          "args": [
            {
              "label": "sqos",
              "type": {
                "displayName": [
                  "Vec"
                ],
                "type": 27
              }
            }
          ],
          "docs": [
            " Registers SQoS"
          ],
          "label": "set_sqos",
          "mutates": true,
          "payable": false,
          "returnType": null,
          "selector": "0xc1e9bcda"
        },
        {
          "args": [],
          "docs": [
            " Returns SQoS"
          ],
          "label": "get_sqos",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Vec"
            ],
            "type": 27
          },
          "selector": "0x8de909d7"
        },
        {
          "args": [
            {
              "label": "chain_name",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 3
              }
            }
          ],
          "docs": [
            " For debug"
          ],
          "label": "clear_messages",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 30
          },
          "selector": "0x6a902407"
        },
        {
          "args": [],
          "docs": [
            " For debug"
          ],
          "label": "get_chain_name",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "String"
            ],
            "type": 3
          },
          "selector": "0xd2c0a7f1"
        },
        {
          "args": [],
          "docs": [
            " Returns the account id of the current owner"
          ],
          "label": "Ownable::owner",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Option"
            ],
            "type": 33
          },
          "selector": "0x4fa43c8c"
        },
        {
          "args": [],
          "docs": [
            " Renounces ownership of the contract"
          ],
          "label": "Ownable::renounce_ownership",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 30
          },
          "selector": "0x5e228753"
        },
        {
          "args": [
            {
              "label": "new_owner",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 0
              }
            }
          ],
          "docs": [
            " Transfer ownership to a new account id"
          ],
          "label": "Ownable::transfer_ownership",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 30
          },
          "selector": "0x11f43efd"
        },
        {
          "args": [
            {
              "label": "_token",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 0
              }
            }
          ],
          "docs": [
            " Sets DAT token contract address"
          ],
          "label": "CrossChainBase::set_token_contract",
          "mutates": true,
          "payable": false,
          "returnType": null,
          "selector": "0x3cc9da7f"
        },
        {
          "args": [
            {
              "label": "message",
              "type": {
                "displayName": [
                  "ISentMessage"
                ],
                "type": 34
              }
            }
          ],
          "docs": [
            " Cross-chain calls method `action` of contract `contract` on chain `to_chain` with data `data`"
          ],
          "label": "CrossChainBase::send_message",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "u128"
            ],
            "type": 10
          },
          "selector": "0x27267917"
        },
        {
          "args": [
            {
              "label": "message",
              "type": {
                "displayName": [
                  "IReceivedMessage"
                ],
                "type": 37
              }
            }
          ],
          "docs": [
            " Cross-chain receives message from chain `from_chain`, the message will be handled by method `action` of contract `to` with data `data`"
          ],
          "label": "CrossChainBase::receive_message",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 30
          },
          "selector": "0x5f6a1d89"
        },
        {
          "args": [
            {
              "label": "from_chain",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 3
              }
            },
            {
              "label": "id",
              "type": {
                "displayName": [
                  "u128"
                ],
                "type": 10
              }
            },
            {
              "label": "error_code",
              "type": {
                "displayName": [
                  "u16"
                ],
                "type": 23
              }
            }
          ],
          "docs": [
            " Cross-chain abandons message from chain `from_chain`, the message will be skipped and not be executed"
          ],
          "label": "CrossChainBase::abandon_message",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 30
          },
          "selector": "0xe44187d7"
        },
        {
          "args": [
            {
              "label": "chain_names",
              "type": {
                "displayName": [
                  "Vec"
                ],
                "type": 38
              }
            }
          ],
          "docs": [
            " Returns messages that sent from chains `chain_names` and can be executed."
          ],
          "label": "CrossChainBase::get_executable_messages",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Vec"
            ],
            "type": 19
          },
          "selector": "0x27fb739a"
        },
        {
          "args": [
            {
              "label": "chain_name",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 3
              }
            },
            {
              "label": "id",
              "type": {
                "displayName": [
                  "u128"
                ],
                "type": 10
              }
            }
          ],
          "docs": [
            " Triggers execution of a message sent from chain `chain_name` with id `id`"
          ],
          "label": "CrossChainBase::execute_message",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 39
          },
          "selector": "0xe80932f8"
        },
        {
          "args": [],
          "docs": [
            " Returns the simplified message, this message is reset every time when a contract is called"
          ],
          "label": "CrossChainBase::get_context",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Option"
            ],
            "type": 40
          },
          "selector": "0xeee9c1b3"
        },
        {
          "args": [
            {
              "label": "chain_name",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 3
              }
            }
          ],
          "docs": [
            " Returns the number of messages sent to chain `chain_name`"
          ],
          "label": "CrossChainBase::get_sent_message_number",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "u128"
            ],
            "type": 10
          },
          "selector": "0xf0c1c5e3"
        },
        {
          "args": [
            {
              "label": "chain_name",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 3
              }
            }
          ],
          "docs": [
            " Returns the number of messages received from chain `chain_name`"
          ],
          "label": "CrossChainBase::get_received_message_number",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "u128"
            ],
            "type": 10
          },
          "selector": "0x6544b363"
        },
        {
          "args": [
            {
              "label": "chain_name",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 3
              }
            },
            {
              "label": "id",
              "type": {
                "displayName": [
                  "u128"
                ],
                "type": 10
              }
            }
          ],
          "docs": [
            " Returns the message with id `id` sent to chain `chain_name`"
          ],
          "label": "CrossChainBase::get_sent_message",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 42
          },
          "selector": "0x2f8e34c8"
        },
        {
          "args": [
            {
              "label": "chain_name",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 3
              }
            },
            {
              "label": "id",
              "type": {
                "displayName": [
                  "u128"
                ],
                "type": 10
              }
            }
          ],
          "docs": [
            " Returns the message with id `id` received from chain `chain_name`"
          ],
          "label": "CrossChainBase::get_received_message",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 43
          },
          "selector": "0x385a9e17"
        },
        {
          "args": [
            {
              "label": "action",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 3
              }
            },
            {
              "label": "interface",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 3
              }
            }
          ],
          "docs": [
            " Registers external callable interface information"
          ],
          "label": "CrossChainBase::register_interface",
          "mutates": true,
          "payable": false,
          "returnType": null,
          "selector": "0x08a869ba"
        },
        {
          "args": [
            {
              "label": "contract",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 0
              }
            },
            {
              "label": "action",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 3
              }
            }
          ],
          "docs": [
            " Returns interface information of contract `contract` and action `action`"
          ],
          "label": "CrossChainBase::get_interface",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 39
          },
          "selector": "0xda374e2f"
        },
        {
          "args": [
            {
              "label": "porters",
              "type": {
                "displayName": [
                  "Porters"
                ],
                "type": 25
              }
            },
            {
              "label": "requirement",
              "type": {
                "displayName": [
                  "u16"
                ],
                "type": 23
              }
            }
          ],
          "docs": [
            " Changes porters and requirement."
          ],
          "label": "MultiPorters::change_porters_and_requirement",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 30
          },
          "selector": "0x5c22bcc9"
        },
        {
          "args": [],
          "docs": [
            " Get porters."
          ],
          "label": "MultiPorters::get_porters",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Porters"
            ],
            "type": 25
          },
          "selector": "0xe1d7fd35"
        },
        {
          "args": [],
          "docs": [
            " Get requirement"
          ],
          "label": "MultiPorters::get_requirement",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "u16"
            ],
            "type": 23
          },
          "selector": "0x1c61c3be"
        },
        {
          "args": [
            {
              "label": "chain_name",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 3
              }
            },
            {
              "label": "_validator",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 0
              }
            }
          ],
          "docs": [
            " Get the message id which needs to be ported by `validator` on chain `chain_name`"
          ],
          "label": "MultiPorters::get_msg_porting_task",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "u128"
            ],
            "type": 10
          },
          "selector": "0x9bdb6a1f"
        }
      ]
    },
    "storage": {
      "struct": {
        "fields": [
          {
            "layout": {
              "enum": {
                "dispatchKey": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "variants": {
                  "0": {
                    "fields": [
                      {
                        "layout": {
                          "cell": {
                            "key": "0x0100000000000000000000000000000000000000000000000000000000000000",
                            "ty": 0
                          }
                        },
                        "name": null
                      }
                    ]
                  },
                  "1": {
                    "fields": []
                  }
                }
              }
            },
            "name": "owner"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0100000000000000000000000000000000000000000000000000000000000000",
                "ty": 3
              }
            },
            "name": "chain_name"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0200000000000000000000000000000000000000000000000000000000000000",
                "ty": 4
              }
            },
            "name": "interfaces"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0300000000000000000000000000000000000000000000000000000000000000",
                "ty": 7
              }
            },
            "name": "sent_message_table"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0400000000000000000000000000000000000000000000000000000000000000",
                "ty": 18
              }
            },
            "name": "received_message_table"
          },
          {
            "layout": {
              "enum": {
                "dispatchKey": "0x0500000000000000000000000000000000000000000000000000000000000000",
                "variants": {
                  "0": {
                    "fields": [
                      {
                        "layout": {
                          "struct": {
                            "fields": [
                              {
                                "layout": {
                                  "cell": {
                                    "key": "0x0600000000000000000000000000000000000000000000000000000000000000",
                                    "ty": 10
                                  }
                                },
                                "name": "id"
                              },
                              {
                                "layout": {
                                  "cell": {
                                    "key": "0x0700000000000000000000000000000000000000000000000000000000000000",
                                    "ty": 3
                                  }
                                },
                                "name": "from_chain"
                              },
                              {
                                "layout": {
                                  "cell": {
                                    "key": "0x0800000000000000000000000000000000000000000000000000000000000000",
                                    "ty": 3
                                  }
                                },
                                "name": "sender"
                              },
                              {
                                "layout": {
                                  "cell": {
                                    "key": "0x0900000000000000000000000000000000000000000000000000000000000000",
                                    "ty": 3
                                  }
                                },
                                "name": "signer"
                              },
                              {
                                "layout": {
                                  "cell": {
                                    "key": "0x0a00000000000000000000000000000000000000000000000000000000000000",
                                    "ty": 11
                                  }
                                },
                                "name": "sqos"
                              },
                              {
                                "layout": {
                                  "cell": {
                                    "key": "0x0b00000000000000000000000000000000000000000000000000000000000000",
                                    "ty": 0
                                  }
                                },
                                "name": "contract"
                              },
                              {
                                "layout": {
                                  "array": {
                                    "cellsPerElem": 1,
                                    "layout": {
                                      "cell": {
                                        "key": "0x1000000000000000000000000000000000000000000000000000000000000000",
                                        "ty": 2
                                      }
                                    },
                                    "len": 4,
                                    "offset": "0x0c00000000000000000000000000000000000000000000000000000000000000"
                                  }
                                },
                                "name": "action"
                              }
                            ]
                          }
                        },
                        "name": null
                      }
                    ]
                  },
                  "1": {
                    "fields": []
                  }
                }
              }
            },
            "name": "context"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0600000000000000000000000000000000000000000000000000000000000000",
                "ty": 23
              }
            },
            "name": "required"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0700000000000000000000000000000000000000000000000000000000000000",
                "ty": 24
              }
            },
            "name": "is_porter"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0800000000000000000000000000000000000000000000000000000000000000",
                "ty": 25
              }
            },
            "name": "porters"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0900000000000000000000000000000000000000000000000000000000000000",
                "ty": 26
              }
            },
            "name": "sqos_table"
          }
        ]
      }
    },
    "types": [
      {
        "id": 0,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 1,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_env",
            "types",
            "AccountId"
          ]
        }
      },
      {
        "id": 1,
        "type": {
          "def": {
            "array": {
              "len": 32,
              "type": 2
            }
          }
        }
      },
      {
        "id": 2,
        "type": {
          "def": {
            "primitive": "u8"
          }
        }
      },
      {
        "id": 3,
        "type": {
          "def": {
            "primitive": "str"
          }
        }
      },
      {
        "id": 4,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 6,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 5
            },
            {
              "name": "V",
              "type": 3
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 5,
        "type": {
          "def": {
            "tuple": [
              0,
              3
            ]
          }
        }
      },
      {
        "id": 6,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 1,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_primitives",
            "Key"
          ]
        }
      },
      {
        "id": 7,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 6,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 3
            },
            {
              "name": "V",
              "type": 8
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 8,
        "type": {
          "def": {
            "sequence": {
              "type": 9
            }
          }
        }
      },
      {
        "id": 9,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "id",
                  "type": 10,
                  "typeName": "u128"
                },
                {
                  "name": "from_chain",
                  "type": 3,
                  "typeName": "String"
                },
                {
                  "name": "to_chain",
                  "type": 3,
                  "typeName": "String"
                },
                {
                  "name": "sender",
                  "type": 0,
                  "typeName": "AccountId"
                },
                {
                  "name": "signer",
                  "type": 0,
                  "typeName": "AccountId"
                },
                {
                  "name": "sqos",
                  "type": 11,
                  "typeName": "Vec<SQoS>"
                },
                {
                  "name": "content",
                  "type": 15,
                  "typeName": "Content"
                },
                {
                  "name": "session",
                  "type": 17,
                  "typeName": "Session"
                }
              ]
            }
          },
          "path": [
            "cross_chain",
            "storage_define",
            "SentMessage"
          ]
        }
      },
      {
        "id": 10,
        "type": {
          "def": {
            "primitive": "u128"
          }
        }
      },
      {
        "id": 11,
        "type": {
          "def": {
            "sequence": {
              "type": 12
            }
          }
        }
      },
      {
        "id": 12,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "t",
                  "type": 13,
                  "typeName": "SQoSType"
                },
                {
                  "name": "v",
                  "type": 14,
                  "typeName": "Option<String>"
                }
              ]
            }
          },
          "path": [
            "cross_chain",
            "storage_define",
            "SQoS"
          ]
        }
      },
      {
        "id": 13,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "Reveal"
                },
                {
                  "index": 1,
                  "name": "Challenge"
                },
                {
                  "index": 2,
                  "name": "Threshold"
                },
                {
                  "index": 3,
                  "name": "Priority"
                },
                {
                  "index": 4,
                  "name": "ExceptionRollback"
                },
                {
                  "index": 5,
                  "name": "Anonymous"
                },
                {
                  "index": 6,
                  "name": "Identity"
                },
                {
                  "index": 7,
                  "name": "Isolation"
                },
                {
                  "index": 8,
                  "name": "CrossVerify"
                }
              ]
            }
          },
          "path": [
            "cross_chain",
            "storage_define",
            "SQoSType"
          ]
        }
      },
      {
        "id": 14,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "None"
                },
                {
                  "fields": [
                    {
                      "type": 3
                    }
                  ],
                  "index": 1,
                  "name": "Some"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 3
            }
          ],
          "path": [
            "Option"
          ]
        }
      },
      {
        "id": 15,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "contract",
                  "type": 3,
                  "typeName": "String"
                },
                {
                  "name": "action",
                  "type": 3,
                  "typeName": "String"
                },
                {
                  "name": "data",
                  "type": 16,
                  "typeName": "Bytes"
                }
              ]
            }
          },
          "path": [
            "cross_chain",
            "storage_define",
            "Content"
          ]
        }
      },
      {
        "id": 16,
        "type": {
          "def": {
            "sequence": {
              "type": 2
            }
          }
        }
      },
      {
        "id": 17,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "msg_type",
                  "type": 2,
                  "typeName": "u8"
                },
                {
                  "name": "id",
                  "type": 10,
                  "typeName": "u128"
                }
              ]
            }
          },
          "path": [
            "cross_chain",
            "storage_define",
            "Session"
          ]
        }
      },
      {
        "id": 18,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 6,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 3
            },
            {
              "name": "V",
              "type": 19
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 19,
        "type": {
          "def": {
            "sequence": {
              "type": 20
            }
          }
        }
      },
      {
        "id": 20,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "id",
                  "type": 10,
                  "typeName": "u128"
                },
                {
                  "name": "from_chain",
                  "type": 3,
                  "typeName": "String"
                },
                {
                  "name": "sender",
                  "type": 3,
                  "typeName": "String"
                },
                {
                  "name": "signer",
                  "type": 3,
                  "typeName": "String"
                },
                {
                  "name": "sqos",
                  "type": 11,
                  "typeName": "Vec<SQoS>"
                },
                {
                  "name": "contract",
                  "type": 0,
                  "typeName": "AccountId"
                },
                {
                  "name": "action",
                  "type": 21,
                  "typeName": "[u8; 4]"
                },
                {
                  "name": "data",
                  "type": 16,
                  "typeName": "Bytes"
                },
                {
                  "name": "session",
                  "type": 17,
                  "typeName": "Session"
                },
                {
                  "name": "executed",
                  "type": 22,
                  "typeName": "bool"
                },
                {
                  "name": "error_code",
                  "type": 23,
                  "typeName": "u16"
                }
              ]
            }
          },
          "path": [
            "cross_chain",
            "storage_define",
            "ReceivedMessage"
          ]
        }
      },
      {
        "id": 21,
        "type": {
          "def": {
            "array": {
              "len": 4,
              "type": 2
            }
          }
        }
      },
      {
        "id": 22,
        "type": {
          "def": {
            "primitive": "bool"
          }
        }
      },
      {
        "id": 23,
        "type": {
          "def": {
            "primitive": "u16"
          }
        }
      },
      {
        "id": 24,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 6,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 0
            },
            {
              "name": "V",
              "type": 22
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 25,
        "type": {
          "def": {
            "sequence": {
              "type": 0
            }
          }
        }
      },
      {
        "id": 26,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 6,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 0
            },
            {
              "name": "V",
              "type": 11
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 27,
        "type": {
          "def": {
            "sequence": {
              "type": 28
            }
          }
        }
      },
      {
        "id": 28,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "t",
                  "type": 29,
                  "typeName": "ISQoSType"
                },
                {
                  "name": "v",
                  "type": 14,
                  "typeName": "Option<String>"
                }
              ]
            }
          },
          "path": [
            "payload",
            "message_define",
            "ISQoS"
          ]
        }
      },
      {
        "id": 29,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "Reveal"
                },
                {
                  "index": 1,
                  "name": "Challenge"
                },
                {
                  "index": 2,
                  "name": "Threshold"
                },
                {
                  "index": 3,
                  "name": "Priority"
                },
                {
                  "index": 4,
                  "name": "ExceptionRollback"
                },
                {
                  "index": 5,
                  "name": "Anonymous"
                },
                {
                  "index": 6,
                  "name": "Identity"
                },
                {
                  "index": 7,
                  "name": "Isolation"
                },
                {
                  "index": 8,
                  "name": "CrossVerify"
                }
              ]
            }
          },
          "path": [
            "payload",
            "message_define",
            "ISQoSType"
          ]
        }
      },
      {
        "id": 30,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 31
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 32
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 31
            },
            {
              "name": "E",
              "type": 32
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 31,
        "type": {
          "def": {
            "tuple": []
          }
        }
      },
      {
        "id": 32,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "NotOwner"
                },
                {
                  "index": 1,
                  "name": "IdNotMatch"
                },
                {
                  "index": 2,
                  "name": "ChainMessageNotFound"
                },
                {
                  "index": 3,
                  "name": "IdOutOfBound"
                },
                {
                  "index": 4,
                  "name": "AlreadyExecuted"
                },
                {
                  "index": 5,
                  "name": "InterfaceNotFound"
                },
                {
                  "index": 6,
                  "name": "DecodeDataFailed"
                },
                {
                  "index": 7,
                  "name": "CrossContractCallFailed"
                },
                {
                  "index": 8,
                  "name": "NotPorter"
                }
              ]
            }
          },
          "path": [
            "cross_chain",
            "storage_define",
            "Error"
          ]
        }
      },
      {
        "id": 33,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "None"
                },
                {
                  "fields": [
                    {
                      "type": 0
                    }
                  ],
                  "index": 1,
                  "name": "Some"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 0
            }
          ],
          "path": [
            "Option"
          ]
        }
      },
      {
        "id": 34,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "to_chain",
                  "type": 3,
                  "typeName": "String"
                },
                {
                  "name": "sqos",
                  "type": 27,
                  "typeName": "ink_prelude::vec::Vec<ISQoS>"
                },
                {
                  "name": "content",
                  "type": 35,
                  "typeName": "IContent"
                },
                {
                  "name": "session",
                  "type": 36,
                  "typeName": "ISession"
                }
              ]
            }
          },
          "path": [
            "payload",
            "message_define",
            "ISentMessage"
          ]
        }
      },
      {
        "id": 35,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "contract",
                  "type": 3,
                  "typeName": "String"
                },
                {
                  "name": "action",
                  "type": 3,
                  "typeName": "String"
                },
                {
                  "name": "data",
                  "type": 16,
                  "typeName": "ink_prelude::vec::Vec<u8>"
                }
              ]
            }
          },
          "path": [
            "payload",
            "message_define",
            "IContent"
          ]
        }
      },
      {
        "id": 36,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "msg_type",
                  "type": 2,
                  "typeName": "u8"
                },
                {
                  "name": "id",
                  "type": 10,
                  "typeName": "u128"
                }
              ]
            }
          },
          "path": [
            "payload",
            "message_define",
            "ISession"
          ]
        }
      },
      {
        "id": 37,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "id",
                  "type": 10,
                  "typeName": "u128"
                },
                {
                  "name": "from_chain",
                  "type": 3,
                  "typeName": "String"
                },
                {
                  "name": "sender",
                  "type": 3,
                  "typeName": "String"
                },
                {
                  "name": "signer",
                  "type": 3,
                  "typeName": "String"
                },
                {
                  "name": "sqos",
                  "type": 27,
                  "typeName": "ink_prelude::vec::Vec<ISQoS>"
                },
                {
                  "name": "contract",
                  "type": 1,
                  "typeName": "[u8;32]"
                },
                {
                  "name": "action",
                  "type": 21,
                  "typeName": "[u8;4]"
                },
                {
                  "name": "data",
                  "type": 16,
                  "typeName": "ink_prelude::vec::Vec<u8>"
                },
                {
                  "name": "session",
                  "type": 36,
                  "typeName": "ISession"
                }
              ]
            }
          },
          "path": [
            "payload",
            "message_define",
            "IReceivedMessage"
          ]
        }
      },
      {
        "id": 38,
        "type": {
          "def": {
            "sequence": {
              "type": 3
            }
          }
        }
      },
      {
        "id": 39,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 3
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 32
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 3
            },
            {
              "name": "E",
              "type": 32
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 40,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "None"
                },
                {
                  "fields": [
                    {
                      "type": 41
                    }
                  ],
                  "index": 1,
                  "name": "Some"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 41
            }
          ],
          "path": [
            "Option"
          ]
        }
      },
      {
        "id": 41,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "id",
                  "type": 10,
                  "typeName": "u128"
                },
                {
                  "name": "from_chain",
                  "type": 3,
                  "typeName": "String"
                },
                {
                  "name": "sender",
                  "type": 3,
                  "typeName": "String"
                },
                {
                  "name": "signer",
                  "type": 3,
                  "typeName": "String"
                },
                {
                  "name": "sqos",
                  "type": 27,
                  "typeName": "ink_prelude::vec::Vec<ISQoS>"
                },
                {
                  "name": "contract",
                  "type": 1,
                  "typeName": "[u8;32]"
                },
                {
                  "name": "action",
                  "type": 21,
                  "typeName": "[u8;4]"
                }
              ]
            }
          },
          "path": [
            "payload",
            "message_define",
            "IContext"
          ]
        }
      },
      {
        "id": 42,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 9
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 32
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 9
            },
            {
              "name": "E",
              "type": 32
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 43,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 20
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 32
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 20
            },
            {
              "name": "E",
              "type": 32
            }
          ],
          "path": [
            "Result"
          ]
        }
      }
    ]
  }
}